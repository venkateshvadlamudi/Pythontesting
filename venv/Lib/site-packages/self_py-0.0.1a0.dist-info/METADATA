Metadata-Version: 2.1
Name: self-py
Version: 0.0.1a0
Summary: Understanding performance characteristics of common python constructs
Home-page: https://github.com/mr-uuid/perfpy
Author: Omar Eid
Author-email: contact.omar.eid@gmail.com
License: UNKNOWN
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License (GPL)
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries
Description-Content-Type: text/markdown
Requires-Dist: attrs
Requires-Dist: pydantic
Requires-Dist: toolz
Requires-Dist: numpy
Provides-Extra: dev
Requires-Dist: ipython ; extra == 'dev'
Requires-Dist: mypy ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: pytest-pep8 ; extra == 'dev'
Requires-Dist: pytest-profiling ; extra == 'dev'
Requires-Dist: pstats-view ; extra == 'dev'
Requires-Dist: flake8 ; extra == 'dev'

# perf-py

A library that personally helps me understand the performance of common python code (and in turn, it might help you understand it too!)

![Python package](https://github.com/mr-uuid/perfpy/workflows/Python%20package/badge.svg)

# Todo
- [ ] Does mapping over an iterator perform better than using generators?
- [ ] Does chunking a generator affect performance?
- [ ] Does composing generators affect performance? 
- [x] Make a table of the performance of each function ...
    - [x] Open this up in a notebook!

# Personal Reminders
- To publish to pypi w/o an alpha version, push a commit with `Publish To PYPI` in its commit message.


